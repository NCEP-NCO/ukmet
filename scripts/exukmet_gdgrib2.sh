#!/bin/ksh 

################################################################################
##
##  File:    exgdgrib2.0505z_1705z.grb2.ksh.ecf
##
##  Purpose: Run gdgrib2 for various forecast hours, glevels, gfuncs, and
##           g2convs.  G2CONV is a new argument to gdgrib2.  A g2conv is the
##           name of a file that contains additional arguments 
##
##  Dependencies:
##       - gdgrib2 being in the PATH
##       - env $COMIN set to location of NAWIPS directory, e.g. /com/nawips/prod
##       - env $COMOUT set to ??.
##
##
##  Usage: best run at 0505Z and 1705Z
##
##  Input: 
##      -  Various files from /export-3/ncosrvnfs-cp/model/grid/gempak, this
##         path in this script is referred to as $INPUTDIR.  The name of input
##         files from this path are autogenerated by this script:
##
##         INPUTDIR=$COMIN/ukmet.${yy}${mm}${dd}${HH}forecastHour
##
##      -  25 g2conv_f*.tbl files autogenerated by this script.  A 
##         g2conv_f*.tbl is made for each forecast hour and fed to gdgrib2
##         as a value for the gdgrib2 GCONV argument.
##
##  Output: 
##    - file $COMOUT/$OUTPUTFILE where OUTPUTFILE=gdgrib2_out.grb2
##      this is the main deliverable it is the GBFILE argument for gdgrib2.
##
##  Created: 2016 March 30
##  Author:  Steve Russell steve.russell@noaa.gov
##
################################################################################

# Set the commands to print out in addition to executing the commands
set -xa

#INPUTDIR=$COMIN/ukmet.${PDY}
INPUTDIR=$COMIN

OUTPUTFILE=gdgrib2_out.grb2

# Set an array of forecast times
forecastHours=(f000 f006 f012 f018 f024 f030 f036 f042 f048 f054 f060 f066 \
               f072 f078 f084 f090 f096 f102 f108 f114 f120 f126 f132 f138 f144)

# Set an array of glevels
glevels=(0 1000 950 850 700 500 400 300 250 200 150 100)

# Set an array of gfunc values
gfuncs=(hght p06m p12m pres relh snir spfh tmnk tmpk tmxk urel vrel pmsl)

# Set an array of gvcords 
gvcords=(mwsl none pres trop) 


################################################################################
##                          Function Definitions
################################################################################

# Make g2conv_f*.tbl files to be used to store input arguments
makeG2CONVTblFiles(){
        
  # For each  forecast hour
  for i in ${forecastHours[@]}; 
     do 
        G2CONV=g2conv_$i.tbl          
  
        # Create the g2conv_$i.tbl file 
        if [[ ! -a "$G2CONV" ]];then
             touch $G2CONV
        fi
  
        # For each glevel
        for j in ${glevels[@]};
             do
  
             # For each gfunc
             for k in ${gfuncs[@]};
                 do
               # For each gvords
               for m in ${gvcords[@]};
               do
                 # Make a gdgrib2 argument string                               
                 s1="GDFILE=$INPUTDIR/ukmet_hr_${PDY}${cyc}$i "
                 s2="GBFILE=$OUTPUTFILE "                                       
                 s3="GFUNC=$k "                                               
                 s4="GDATTIM=$i "                                               
                 s5="GLEVEL=$j "                                                
                 s6="GVCORD=$m "                                              
                 s7="G2IS=0;2 "
                 s8="G2IDS=74;0;2 "
                 if [ $k = p06m -o $k = p12m ]; then
                   if [ $s5 = "GLEVEL=0" -a $s6 = "GVCORD=none" ];  then
                       s9="G2PDT=8|;;2;0;45;0;0;1 "
                   else
                     s9=" "
                   fi
                 else 
                   s9="G2PDT=0|;;2;0;45;0;0;1 "
                 fi
                 s10="G2DRT= "

                 gdgrib2args="$s1$s2$s3$s4$s5$s6$s7$s8$s9$s10"                               
                                                                                
                 # Send the gdgrib2args string to the g2conv_$i.tbl file        
                 if [ "$s9" != " " ]; then
                   echo $gdgrib2args >> $G2CONV                                   
                 fi
               done # gvcords
             done # gfuncs   
        done # glevels
  done # forecastHours
}

###############################################################################S

# Run gdgrib2 with some static input arguments and the arguments in the
# *.tbl files generated by function makeG2CONVTblFiles()
runGDGRIB2(){

# A counting index
x=0

# For each forecast Hour
for i in ${forecastHours[@]}; 
    do 

        # If this input file which is used as an argument exists
        if [[ -a $INPUTDIR/ukmet_hr_${PDY}${cyc}$i ]];then
            # Send that g2conv_$i.tbl and misc arguments to gdgrib2

            # Note: there must be a line between "run" and "exit"
            # Note: the closing "EOF" must not have any white space before it
            gdgrib2 << EOF
            PROJ = ced
            GRDAREA = 90;0;-90;-359.75
            KXKY = 1440;721
            G2CONV = g2conv_$i.tbl
            run

            exit
EOF
        else
        # That input file, the GFILE argument for gdrib2 does not exist
            filesNotThere[x]=$INPUTDIR/ukmet_hr_${PDY}${cyc}$i
        fi
    ((x++))
done


}

################################################################################
##                                MAIN PROGRAM
################################################################################

#WCOSS settings and tasks
startmsg
msg="Begin job for $job"
postmsg "$msg"
cd $DATA


# Make g2conv_f*.tbl files to be used to store input arguments
makeG2CONVTblFiles;

# Run gdgrib2 with some static input arguments and the arguments in the
# *.tbl files generated by function makeG2CONVTblFiles()
runGDGRIB2;

printf "\n"


# If there were no input files missing
if [[ ${#filesNotThere[@]} = 0 ]];then
    echo "ZERO gdgrib GDFILE input files missing"
else
    # Output messages about the missing files
    msgerr1="${#filesNotThere[@]} gdgrib2 GDFILE input files did not exist "
    msgerr2="Please check the log files for a list"
    msgerr3="Exiting with errors"

    echo $msgerr1
    echo $msgerr2
    echo $msgerr3

    postmsg "$msgerr1"
    postmsg "$msgerr2"
    postmsg "$msgerr3"

    # List each missing input file (gdgrib2, GDFILE argument ) in the log
    for m in ${filesNotThere[@]};
    do
        msgmissingfile="Missing file: $m"
        echo $msgmissingfile
        postmsg "$msgmissingfile"
    done

    export err=1;err_chk

    echo "Exiting with errors"
    exit 1
fi

  # Copy the output, $OUTPUTFILE, to where it needs to be
  if [ $SENDCOM = "YES" ] ; then
     cpfs $OUTPUTFILE $COMOUT/ukmet.t${cyc}z.grib2
     if [ $SENDDBN = "YES" ] ; then
         $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE} $job \
           $COMOUT/ukmet.t${cyc}z.grib2
     else
       echo "##### DBN_ALERT_TYPsE is ${DBN_ALERT_TYPE} #####"
     fi
  fi


msgexit="Job completed normally."
postmsg "$msgexit"

exit

################################################################################
##               END OF FILE: exgdgrib2.0505z_1705z.grb2.ksh.ecf
################################################################################
